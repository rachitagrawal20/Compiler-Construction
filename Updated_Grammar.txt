<programNt>-				<moduleDeclarations> <otherModules> <driverModule> <otherModules>
<moduleDeclarations>-		<moduleDeclaration> <moduleDeclarations> | e
<moduleDeclaration>-		DECLARE MODULE ID SEMICOL
<otherModules>-				<moduleNt> <otherModules> | e
<driverModule>-				DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <moduleDef>
<moduleNt>-					DEF MODULE ID ENDDEF TAKES INPUT SQBO <input_plist> SQBC SEMICOL <ret> <moduleDef>
<ret>-						RETURNS SQBO <output_plist> SQBC SEMICOL | e
<input_plist>-				ID COLON <dataType> <nt1>
<nt1>-						COMMA ID COLON <dataType> <nt1> | e
<output_plist>-				ID COLON <type> <nt2>
<nt2>-						COMMA ID COLON <type> <nt2> | e
<dataType>-					INTEGER | REAL | BOOLEAN | ARRAY SQBO <range> SQBC OF <type>
<type>-						INTEGER | REAL | BOOLEAN
<moduleDef>-				START <statements> END
<statements>-				<statement> <statements> | e
<statement>-				<ioStmt> | <simpleStmt> | <declareStmt> | <conditionalStmt> | <iterativeStmt>
<ioStmt>-					GET_VALUE BO ID BC SEMICOL | PRINT BO <var> BC SEMICOL
<boolConstt>-           	TRUE | FALSE
<var_id_num>-           	ID <whichId> | NUM | RNUM
<var>-                  	<var_id_num> | <boolConstt>
<whichId>-              	SQBO <index> SQBC | e
<index>-                	NUM | ID
<simpleStmt>-				<assignmentStmt> | <moduleReuseStmt>
<assignmentStmt>-			ID <whichStmt>
<whichStmt>-				<lvalueIDStmt> | <lvalueARRStmt>
<lvalueIDStmt>-				ASSIGNOP <expression> SEMICOL
<lvalueARRStmt>-			SQBO <index> SQBC ASSIGNOP <expression> SEMICOL
<moduleReuseStmt>-			<optional> USE MODULE ID WITH PARAMETERS <idList> SEMICOL
<optional>-					SQBO <idList> SQBC ASSIGNOP | e
<idList>-					ID <nt3>
<nt3>-						COMMA ID <nt3> | e
<expression>-           	<arithmeticOrBooleanExpr> | <unaryExpr>
<unaryExpr>-            	MINUS <unaryExpr2> | PLUS <unaryExpr2> 
<unaryExpr2>-           	<var_id_num> | BO <arithmeticExpr> BC
<arithmeticOrBooleanExpr>-  <AnyTerm> <nt4>
<nt4>- 						<logicalOp> <AnyTerm> <nt4> | e
<AnyTerm>-					<arithmeticExpr> <nt5> | <boolConstt> 
<nt5>- 						<relationalOp> <arithmeticExpr> | e
<arithmeticExpr>-			<term> <nt6>
<nt6>-						<op1> <term> <nt6> | e
<term>-						<factor> <nt7>
<nt7>-						<op2> <factor> <nt7> | e
<factor>-					BO <arithmeticOrBooleanExpr> BC | <var_id_num>
<op1>-						PLUS | MINUS
<op2>-						MUL | DIV
<logicalOp>-				AND | OR
<relationalOp>-				LT | LE | GT | GE | EQ | NE
<declareStmt>-				DECLARE <idList> COLON <dataType> SEMICOL
<conditionalStmt>-			SWITCH BO ID BC START <caseStmts> <defaultNt> END
<caseStmts>-				CASE <value> COLON <statements> BREAK SEMICOL <nt8>
<nt8>-						CASE <value> COLON <statements> BREAK SEMICOL <nt8> | e
<value>-					INTEGER | TRUE | FALSE | NUM
<defaultNt>-				DEFAULT COLON <statements> BREAK SEMICOL | e
<iterativeStmt>-			FOR BO ID IN <range> BC START <statements> END | WHILE BO <arithmeticOrBooleanExpr> BC START <statements> END
<range>-					<index> RANGEOP <index>